<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.0" xml:lang="en-US">
  <compounddef id="dataloggerservice_8cpp" kind="file" language="C++">
    <compoundname>dataloggerservice.cpp</compoundname>
    <includes refid="dataloggerservice_8h" local="no">qtpokit/dataloggerservice.h</includes>
    <includes refid="dataloggerservice__p_8h" local="yes">dataloggerservice_p.h</includes>
    <includes refid="pokitproducts__p_8h" local="yes">pokitproducts_p.h</includes>
    <includes refid="statusservice_8h" local="no">qtpokit/statusservice.h</includes>
    <includes local="no">QDataStream</includes>
    <includes local="no">QIODevice</includes>
    <includes local="no">QLowEnergyController</includes>
    <includes local="no">QtEndian</includes>
    <incdepgraph>
      <node id="3">
        <label>abstractpokitservice.h</label>
        <link refid="abstractpokitservice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>qtpokit/dataloggerservice.h</label>
        <link refid="dataloggerservice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pokitproducts.h</label>
        <link refid="pokitproducts_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>qtpokit_global.h</label>
        <link refid="qtpokit__global_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>qtpokit/statusservice.h</label>
        <link refid="statusservice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>abstractpokitservice_p.h</label>
        <link refid="abstractpokitservice__p_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dataloggerservice.cpp</label>
        <link refid="dataloggerservice_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dataloggerservice_p.h</label>
        <link refid="dataloggerservice__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>pokitproducts_p.h</label>
        <link refid="pokitproducts__p_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>QBluetoothAddress</label>
      </node>
      <node id="7">
        <label>QBluetoothDeviceInfo</label>
      </node>
      <node id="14">
        <label>QBluetoothUuid</label>
      </node>
      <node id="22">
        <label>QDataStream</label>
      </node>
      <node id="8">
        <label>QFlags</label>
      </node>
      <node id="23">
        <label>QIODevice</label>
      </node>
      <node id="18">
        <label>QLoggingCategory</label>
      </node>
      <node id="20">
        <label>QLowEnergyController</label>
      </node>
      <node id="10">
        <label>QLowEnergyService</label>
      </node>
      <node id="11">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QString</label>
      </node>
      <node id="15">
        <label>QVersionNumber</label>
      </node>
      <node id="24">
        <label>QtEndian</label>
      </node>
      <node id="5">
        <label>QtGlobal</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Defines the <ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref> and <ref refid="classDataLoggerServicePrivate" kindref="compound">DataLoggerServicePrivate</ref> classes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2022-2024<sp/>Paul<sp/>Colby<sp/>&lt;git@colby.id.au&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>\file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Defines<sp/>the<sp/>DataLoggerService<sp/>and<sp/>DataLoggerServicePrivate<sp/>classes.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dataloggerservice_8h" kindref="compound">qtpokit/dataloggerservice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dataloggerservice__p_8h" kindref="compound">dataloggerservice_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pokitproducts_p.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="statusservice_8h" kindref="compound">qtpokit/statusservice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDataStream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QIODevice&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLowEnergyController&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtEndian&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>\class<sp/>DataLoggerService</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>DataLoggerService<sp/>class<sp/>accesses<sp/>the<sp/>`Data<sp/>Logger`<sp/>service<sp/>of<sp/>Pokit<sp/>devices.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/>Returns<sp/>\a<sp/>mode<sp/>as<sp/>a<sp/>user-friendly<sp/>string.</highlight></codeline>
<codeline lineno="27" refid="classDataLoggerService_1a4c696b7500e666959bbec4b0ed677d5d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classDataLoggerService_1a4c696b7500e666959bbec4b0ed677d5d" kindref="member">DataLoggerService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">Mode</ref><sp/>&amp;mode)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">Mode::Idle</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Idle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a1a18453c20867d5a990479b3716cbbc5" kindref="member">Mode::DcVoltage</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;DC<sp/>voltage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a9f01dfb531bd23d5cb9c2bb2e49d685e" kindref="member">Mode::AcVoltage</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;AC<sp/>voltage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771af2a03b2c98a6620d4bf33af69572898e" kindref="member">Mode::DcCurrent</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;DC<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a7b39f260051ef745ddba9fc57ac23ff9" kindref="member">Mode::AcCurrent</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;AC<sp/>current&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771aee7a8e262285ed49ea1b4e4ae11525bd" kindref="member">Mode::Temperature</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Temperature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">///<sp/>Returns<sp/>\a<sp/>range<sp/>as<sp/>a<sp/>user-friendly<sp/>string,<sp/>or<sp/>a<sp/>null<sp/>QString<sp/>if<sp/>\a<sp/>mode<sp/>has<sp/>no<sp/>ranges.</highlight></codeline>
<codeline lineno="41" refid="classDataLoggerService_1acb7b2d9480b2756074571c6b96531337" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classDataLoggerService_1a4c696b7500e666959bbec4b0ed677d5d" kindref="member">DataLoggerService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pokitproducts_8h_1a0c4f628f68ce0432a6db11681a41fda4" kindref="member">PokitProduct</ref><sp/>product,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint8<sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">Mode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">Mode::Idle</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a1a18453c20867d5a990479b3716cbbc5" kindref="member">Mode::DcVoltage</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a9f01dfb531bd23d5cb9c2bb2e49d685e" kindref="member">Mode::AcVoltage</ref>:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceVoltageRange_1a843ef4bfc3538988c695fa643adcd4d0" kindref="member">VoltageRange::toString</ref>(product,<sp/>range);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771af2a03b2c98a6620d4bf33af69572898e" kindref="member">Mode::DcCurrent</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a7b39f260051ef745ddba9fc57ac23ff9" kindref="member">Mode::AcCurrent</ref>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceCurrentRange_1a683a82fdd02371d1d6acb4bbbd91e844" kindref="member">CurrentRange::toString</ref>(product,<sp/>range);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771aee7a8e262285ed49ea1b4e4ae11525bd" kindref="member">Mode::Temperature</ref>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">///<sp/>Returns<sp/>\a<sp/>range<sp/>as<sp/>a<sp/>user-friendly<sp/>string,<sp/>or<sp/>a<sp/>null<sp/>QString<sp/>if<sp/>\a<sp/>mode<sp/>has<sp/>no<sp/>ranges.</highlight></codeline>
<codeline lineno="59" refid="classDataLoggerService_1a6f92316f5c2c256b17a74c5ad38eeab8" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classDataLoggerService_1a4c696b7500e666959bbec4b0ed677d5d" kindref="member">DataLoggerService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint8<sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">Mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a6f92316f5c2c256b17a74c5ad38eeab8" kindref="member">toString</ref>(*<ref refid="classAbstractPokitService_1a039d2f1054788cf586c8decadb53ddc0" kindref="member">pokitProduct</ref>(),<sp/>range,<sp/>mode);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>\a<sp/>range,<sp/>or<sp/>the<sp/>string<sp/>&quot;Auto&quot;.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>\a<sp/>range<sp/>is<sp/>not<sp/>a<sp/>known<sp/>valid<sp/>enumeration<sp/>value<sp/>for<sp/>\a<sp/>product&apos;s<sp/>\a<sp/>mode,<sp/>then<sp/>a<sp/>null<sp/>QVariant<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classDataLoggerService_1ac4d7ef9171f04a4d71b404ba3d99cef4" refkind="member"><highlight class="normal"><ref refid="qvariant" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QVariant</ref><sp/><ref refid="classDataLoggerService_1ac4d7ef9171f04a4d71b404ba3d99cef4" kindref="member">DataLoggerService::maxValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="pokitproducts_8h_1a0c4f628f68ce0432a6db11681a41fda4" kindref="member">PokitProduct</ref><sp/>product,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint8<sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">Mode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">Mode::Idle</ref>:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a1a18453c20867d5a990479b3716cbbc5" kindref="member">Mode::DcVoltage</ref>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a9f01dfb531bd23d5cb9c2bb2e49d685e" kindref="member">Mode::AcVoltage</ref>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceVoltageRange_1adc3a8126ae8dcec8010fc8b037fab885" kindref="member">VoltageRange::maxValue</ref>(product,<sp/>range);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771af2a03b2c98a6620d4bf33af69572898e" kindref="member">Mode::DcCurrent</ref>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771a7b39f260051ef745ddba9fc57ac23ff9" kindref="member">Mode::AcCurrent</ref>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceCurrentRange_1a340ae103126865c13997adcde5976bd1" kindref="member">CurrentRange::maxValue</ref>(product,<sp/>range);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771aee7a8e262285ed49ea1b4e4ae11525bd" kindref="member">Mode::Temperature</ref>:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qvariant" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QVariant</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>\a<sp/>range,<sp/>or<sp/>the<sp/>string<sp/>&quot;Auto&quot;.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>\a<sp/>range<sp/>is<sp/>not<sp/>a<sp/>known<sp/>valid<sp/>enumeration<sp/>value<sp/>for<sp/>the<sp/>current<sp/>\a<sp/>product&apos;s<sp/>\a<sp/>mode,</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>then<sp/>a<sp/>null<sp/>QVariant<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classDataLoggerService_1ab2fb8703f5724589cdace781b47bb96d" refkind="member"><highlight class="normal"><ref refid="qvariant" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QVariant</ref><sp/><ref refid="classDataLoggerService_1ac4d7ef9171f04a4d71b404ba3d99cef4" kindref="member">DataLoggerService::maxValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quint8<sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">Mode</ref><sp/>mode)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1ac4d7ef9171f04a4d71b404ba3d99cef4" kindref="member">maxValue</ref>(*<ref refid="classAbstractPokitService_1a039d2f1054788cf586c8decadb53ddc0" kindref="member">pokitProduct</ref>(),<sp/>range,<sp/>mode);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>\typedef<sp/>DataLoggerService::Samples</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>Raw<sp/>samples<sp/>from<sp/>the<sp/>`Reading`<sp/>characteristic.<sp/>These<sp/>raw<sp/>samples<sp/>are<sp/>(supposedly)<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>range<sp/>-2048<sp/>to<sp/>+2047,<sp/>and<sp/>need<sp/>to<sp/>be<sp/>multiplied<sp/>by<sp/>the<sp/>Metadata::scale<sp/>value<sp/>from<sp/>the<sp/>`Metadata`</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>characteristc<sp/>to<sp/>get<sp/>the<sp/>true<sp/>values.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Also<sp/>supposedly,<sp/>there<sp/>should<sp/>be<sp/>no<sp/>more<sp/>than<sp/>10<sp/>samples<sp/>at<sp/>a<sp/>time,<sp/>according<sp/>to<sp/>Pokit&apos;s<sp/>current</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>API<sp/>docs.<sp/>There<sp/>is<sp/>not<sp/>artificial<sp/>limitation<sp/>imposed<sp/>by<sp/>QtPokit,<sp/>so<sp/>devices<sp/>may<sp/>begin<sp/>batching</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>more<sp/>samples<sp/>in<sp/>future.<sp/>Specifically,<sp/>the<sp/>Pokit<sp/>Pro<sp/>seems<sp/>to<sp/>send<sp/>88<sp/>samples<sp/>(in<sp/>176<sp/>bytes)<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>time.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>Pokit<sp/>service<sp/>with<sp/>\a<sp/>parent.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classDataLoggerService_1a1c2155abba340d49fc39bfa49ed59a6c" refkind="member"><highlight class="normal"><ref refid="classDataLoggerService_1a1c2155abba340d49fc39bfa49ed59a6c" kindref="member">DataLoggerService::DataLoggerService</ref>(<ref refid="qlowenergycontroller" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyController</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>controller,<sp/><ref refid="qobject" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QObject</ref><sp/>*<sp/>parent)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitService" kindref="compound">AbstractPokitService</ref>(new<sp/><ref refid="classDataLoggerServicePrivate" kindref="compound">DataLoggerServicePrivate</ref>(controller,<sp/>this),<sp/>parent)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>Pokit<sp/>service<sp/>with<sp/>\a<sp/>parent,<sp/>and<sp/>private<sp/>implementation<sp/>\a<sp/>d.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classDataLoggerService_1ad3ecbfc9b9f40ff3b1f0c8941d4c0a96" refkind="member"><highlight class="normal"><ref refid="classDataLoggerService_1a1c2155abba340d49fc39bfa49ed59a6c" kindref="member">DataLoggerService::DataLoggerService</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDataLoggerServicePrivate" kindref="compound">DataLoggerServicePrivate</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d,<sp/><ref refid="qobject" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QObject</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parent)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitService" kindref="compound">AbstractPokitService</ref>(d,<sp/>parent)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment">///<sp/>\endcond</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>Destroys<sp/>this<sp/>DataLoggerService<sp/>object.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classDataLoggerService_1ab0b747cc7f0ec24ac2611b9d70877ffc" refkind="member"><highlight class="normal"><ref refid="classDataLoggerService_1ab0b747cc7f0ec24ac2611b9d70877ffc" kindref="member">DataLoggerService::~DataLoggerService</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classDataLoggerService_1a661ebfee183fa2f9c90f71696d66a8bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a661ebfee183fa2f9c90f71696d66a8bf" kindref="member">DataLoggerService::readCharacteristics</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a03ef6028ed40b095540dd45ba744c0f5" kindref="member">readMetadataCharacteristic</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="144"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>Reads<sp/>the<sp/>`DataLogger`<sp/>service&apos;s<sp/>`Metadata`<sp/>characteristic.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>Emits<sp/>metadataRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classDataLoggerService_1a03ef6028ed40b095540dd45ba744c0f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a03ef6028ed40b095540dd45ba744c0f5" kindref="member">DataLoggerService::readMetadataCharacteristic</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">CharacteristicUuids::metadata</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>Configures<sp/>the<sp/>Pokit<sp/>device&apos;s<sp/>data<sp/>logger<sp/>mode.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>if<sp/>the<sp/>write<sp/>request<sp/>was<sp/>successfully<sp/>queued,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>Emits<sp/>settingsWritten()<sp/>if/when<sp/>the<sp/>\a<sp/>settings<sp/>have<sp/>been<sp/>writtem<sp/>successfully.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classDataLoggerService_1a3b933a1a161a390eb08e5019685f449c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a3b933a1a161a390eb08e5019685f449c" kindref="member">DataLoggerService::setSettings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDataLoggerService_1_1Settings" kindref="compound">Settings</ref><sp/>&amp;settings)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1ab5fa52ba8b4cacf839abe6d3f8e8a929" kindref="member">CharacteristicUuids::settings</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateIntervalIs32bit<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(d-&gt;getCharacteristic(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">CharacteristicUuids::metadata</ref>).value().size()<sp/>&gt;=<sp/>23);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>value<sp/>=<sp/><ref refid="classDataLoggerServicePrivate_1a774d21863bf83168171143ec8492a736" kindref="member">DataLoggerServicePrivate::encodeSettings</ref>(settings,<sp/>updateIntervalIs32bit);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1isNull" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">isNull</ref>())<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;service-&gt;writeCharacteristic(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d-&gt;service-&gt;error()<sp/>!=<sp/>QLowEnergyService::ServiceError::CharacteristicWriteError);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>Start<sp/>the<sp/>data<sp/>logger<sp/>with<sp/>\a<sp/>settings.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>just<sp/>a<sp/>synonym<sp/>for<sp/>setSettings()<sp/>except<sp/>makes<sp/>the<sp/>caller&apos;s<sp/>intention<sp/>more<sp/>explicit,<sp/>and</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>sanity-checks<sp/>that<sp/>the<sp/>settings&apos;s<sp/>command<sp/>is<sp/>DataLoggerService::Command::Start.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classDataLoggerService_1a4aac49f9a655408e4b58f05735c5f9ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a4aac49f9a655408e4b58f05735c5f9ab" kindref="member">DataLoggerService::startLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDataLoggerService_1_1Settings" kindref="compound">Settings</ref><sp/>&amp;settings)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(settings.<ref refid="structDataLoggerService_1_1Settings_1a71c4c7e8417ee7a187c09a89057c5ab7" kindref="member">command</ref><sp/>==<sp/><ref refid="classDataLoggerService_1a8662772916319f96aa7aeb16c87665ccaa6122a65eaa676f700ae68d393054a37" kindref="member">DataLoggerService::Command::Start</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.<ref refid="structDataLoggerService_1_1Settings_1a71c4c7e8417ee7a187c09a89057c5ab7" kindref="member">command</ref><sp/>!=<sp/><ref refid="classDataLoggerService_1a8662772916319f96aa7aeb16c87665ccaa6122a65eaa676f700ae68d393054a37" kindref="member">DataLoggerService::Command::Start</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(d-&gt;lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Settings<sp/>command<sp/>must<sp/>be<sp/>&apos;Start&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a3b933a1a161a390eb08e5019685f449c" kindref="member">setSettings</ref>(settings);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>Stop<sp/>the<sp/>data<sp/>logger.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>just<sp/>a<sp/>convenience<sp/>function<sp/>equivalent<sp/>to<sp/>calling<sp/>setSettings()<sp/>with<sp/>the<sp/>command<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>DataLoggerService::Command::Stop.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classDataLoggerService_1a9f8a721025e04bf27df18194247b532e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a9f8a721025e04bf27df18194247b532e" kindref="member">DataLoggerService::stopLogger</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note,<sp/>only<sp/>the<sp/>Settings::command<sp/>member<sp/>need<sp/>be<sp/>set,<sp/>since<sp/>the<sp/>others<sp/>are<sp/>all<sp/>ignored<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pokit<sp/>device<sp/>when<sp/>the<sp/>command<sp/>is<sp/>Stop.<sp/>However,<sp/>we<sp/>still<sp/>explicitly<sp/>initialise<sp/>all<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>members<sp/>just<sp/>to<sp/>ensure<sp/>we&apos;re<sp/>never<sp/>exposing<sp/>uninitialised<sp/>RAM<sp/>to<sp/>an<sp/>external<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a3b933a1a161a390eb08e5019685f449c" kindref="member">setSettings</ref>({<sp/><ref refid="classDataLoggerService_1a8662772916319f96aa7aeb16c87665cca11a755d598c0c417f9a36758c3da7481" kindref="member">DataLoggerService::Command::Stop</ref>,<sp/><sp/>0,<sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">DataLoggerService::Mode::Idle</ref>,<sp/>0,<sp/>0,<sp/>0<sp/>});</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>Start<sp/>the<sp/>data<sp/>logger.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>just<sp/>a<sp/>convenience<sp/>function<sp/>equivalent<sp/>to<sp/>calling<sp/>setSettings()<sp/>with<sp/>the<sp/>command<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>DataLoggerService::Command::Refresh.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Once<sp/>the<sp/>Pokit<sp/>device<sp/>has<sp/>processed<sp/>this<sp/>request<sp/>succesffully,<sp/>the<sp/>device<sp/>will<sp/>begin<sp/>notifying</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>the<sp/>`Metadata`<sp/>and<sp/>`Reading`<sp/>characteristic,<sp/>resulting<sp/>in<sp/>emits<sp/>of<sp/>metadataRead<sp/>and<sp/>samplesRead</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>respectively.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classDataLoggerService_1a4c9e68b94b0fba82a979bb7e0b0adab4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a4c9e68b94b0fba82a979bb7e0b0adab4" kindref="member">DataLoggerService::fetchSamples</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note,<sp/>only<sp/>the<sp/>Settings::command<sp/>member<sp/>need<sp/>be<sp/>set,<sp/>since<sp/>the<sp/>others<sp/>are<sp/>all<sp/>ignored<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pokit<sp/>device<sp/>when<sp/>the<sp/>command<sp/>is<sp/>Refresh.<sp/>However,<sp/>we<sp/>still<sp/>explicitly<sp/>initialise<sp/>all<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>members<sp/>just<sp/>to<sp/>ensure<sp/>we&apos;re<sp/>never<sp/>exposing<sp/>uninitialised<sp/>RAM<sp/>to<sp/>an<sp/>external<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a3b933a1a161a390eb08e5019685f449c" kindref="member">setSettings</ref>({<sp/><ref refid="classDataLoggerService_1a8662772916319f96aa7aeb16c87665cca63a6a88c066880c5ac42394a22803ca6" kindref="member">DataLoggerService::Command::Refresh</ref>,<sp/>0,<sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">DataLoggerService::Mode::Idle</ref>,<sp/>0,<sp/>0,<sp/>0<sp/>});</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`DataLogger`<sp/>service&apos;s<sp/>`Metadata`<sp/>characteristic.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(ie<sp/>the<sp/>serviceDetailsDiscovered<sp/>signal<sp/>has<sp/>not<sp/>been<sp/>emitted<sp/>yet),<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>returned<sp/>DataLoggerService::Metadata::scale<sp/>member<sp/>will<sp/>be<sp/>a<sp/>quiet<sp/>NaN,<sp/>which<sp/>can<sp/>be<sp/>checked<sp/>like:</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>const<sp/>DataLoggerService::Metadata<sp/>metadata<sp/>=<sp/>multimeterService-&gt;metadata();</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>if<sp/>(qIsNaN(metadata.scale))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Handle<sp/>failure.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classDataLoggerService_1aa94364928c317c1769e66eaf8635db92" refkind="member"><highlight class="normal"><ref refid="structDataLoggerService_1_1Metadata" kindref="compound">DataLoggerService::Metadata</ref><sp/><ref refid="classDataLoggerService_1aa94364928c317c1769e66eaf8635db92" kindref="member">DataLoggerService::metadata</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">CharacteristicUuids::metadata</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>?<sp/><ref refid="classDataLoggerServicePrivate_1aed59b28db53cea0757289a0960bed3fd" kindref="member">DataLoggerServicePrivate::parseMetadata</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structDataLoggerService_1_1Metadata" kindref="compound">Metadata</ref>{<sp/><ref refid="classDataLoggerService_1a1a3a38ca8befc3de8121d795879140f6a902b0d55fddef6f8d651fe1035b7d4bd" kindref="member">LoggerStatus::Error</ref>,<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN(),<sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">Mode::Idle</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>Enables<sp/>client-side<sp/>notifications<sp/>of<sp/>Data<sp/>Logger<sp/>metadata<sp/>changes.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>alternative<sp/>to<sp/>manually<sp/>requesting<sp/>individual<sp/>reads<sp/>via<sp/>readMetadataCharacteristic().</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Successfully<sp/>read<sp/>values<sp/>(if<sp/>any)<sp/>will<sp/>be<sp/>emitted<sp/>via<sp/>the<sp/>metadataRead()<sp/>signal.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classDataLoggerService_1a0c63e3cdbc6b39ab68b8442b77938049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a0c63e3cdbc6b39ab68b8442b77938049" kindref="member">DataLoggerService::enableMetadataNotifications</ref>()</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;enableCharacteristicNotificatons(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">CharacteristicUuids::metadata</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>Disables<sp/>client-side<sp/>notifications<sp/>of<sp/>Data<sp/>Logger<sp/>metadata<sp/>changes.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>Instantaneous<sp/>reads<sp/>can<sp/>still<sp/>be<sp/>fetched<sp/>by<sp/>readMetadataCharacteristic().</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classDataLoggerService_1a1e007dc2f934757d8b28cdd9939bcaa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a1e007dc2f934757d8b28cdd9939bcaa5" kindref="member">DataLoggerService::disableMetadataNotifications</ref>()</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;disableCharacteristicNotificatons(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">CharacteristicUuids::metadata</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>Enables<sp/>client-side<sp/>notifications<sp/>of<sp/>Data<sp/>Logger<sp/>readings.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>Successfully<sp/>read<sp/>samples<sp/>(if<sp/>any)<sp/>will<sp/>be<sp/>emitted<sp/>via<sp/>the<sp/>samplesRead()<sp/>signal.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classDataLoggerService_1a2b9d2cad9b7b937a2fd20517c5ba825e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a2b9d2cad9b7b937a2fd20517c5ba825e" kindref="member">DataLoggerService::enableReadingNotifications</ref>()</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;enableCharacteristicNotificatons(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1ae49f85e600ca4eb2753818bb2ef32d65" kindref="member">CharacteristicUuids::reading</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>Disables<sp/>client-side<sp/>notifications<sp/>of<sp/>Data<sp/>Logger<sp/>readings.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classDataLoggerService_1a8b144b31de4aa3d33c6e9fcb7e606bae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerService_1a8b144b31de4aa3d33c6e9fcb7e606bae" kindref="member">DataLoggerService::disableReadingNotifications</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;disableCharacteristicNotificatons(<ref refid="structDataLoggerService_1_1CharacteristicUuids_1ae49f85e600ca4eb2753818bb2ef32d65" kindref="member">CharacteristicUuids::reading</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>\fn<sp/>DataLoggerService::settingsWritten</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Settings`<sp/>characteristic<sp/>has<sp/>been<sp/>written<sp/>successfully.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>\see<sp/>setSettings</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>\fn<sp/>DataLoggerService::metadataRead</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Metadata`<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>\see<sp/>readMetadataCharacteristic</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="326"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>\fn<sp/>DataLoggerService::samplesRead</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Reading`<sp/>characteristic<sp/>has<sp/>been<sp/>notified.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>\see<sp/>beginSampling</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>\see<sp/>stopSampling</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>\class<sp/>DataLoggerServicePrivate</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>The<sp/>DataLoggerServicePrivate<sp/>class<sp/>provides<sp/>private<sp/>implementation<sp/>for<sp/>DataLoggerService.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>\internal</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>DataLoggerServicePrivate<sp/>object<sp/>with<sp/>public<sp/>implementation<sp/>\a<sp/>q.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classDataLoggerServicePrivate_1afdabd152b55f000163e30a19f06e7f7f" refkind="member"><highlight class="normal"><ref refid="classDataLoggerServicePrivate_1afdabd152b55f000163e30a19f06e7f7f" kindref="member">DataLoggerServicePrivate::DataLoggerServicePrivate</ref>(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qlowenergycontroller" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyController</ref><sp/>*<sp/>controller,<sp/><ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitServicePrivate" kindref="compound">AbstractPokitServicePrivate</ref>(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>::serviceUuid,<sp/>controller,<sp/>q)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>Returns<sp/>\a<sp/>settings<sp/>in<sp/>the<sp/>format<sp/>Pokit<sp/>devices<sp/>expect.<sp/>If<sp/>\a<sp/>updateIntervalIs32bit<sp/>is<sp/>\c<sp/>true</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>then<sp/>the<sp/>`Update<sp/>Interval`<sp/>field<sp/>will<sp/>be<sp/>encoded<sp/>in<sp/>32-bit<sp/>instead<sp/>of<sp/>16.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classDataLoggerServicePrivate_1a774d21863bf83168171143ec8492a736" refkind="member"><highlight class="normal"><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/><ref refid="classDataLoggerServicePrivate_1a774d21863bf83168171143ec8492a736" kindref="member">DataLoggerServicePrivate::encodeSettings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDataLoggerService_1_1Settings" kindref="compound">DataLoggerService::Settings</ref><sp/>&amp;settings,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateIntervalIs32bit)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1a71c4c7e8417ee7a187c09a89057c5ab7" kindref="member">command</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>1<sp/>byte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1a5a55213ca7361364642dffa9f8b77ec7" kindref="member">arguments</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>2<sp/>bytes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1ac72c18db4e38d95664c456c527e352f4" kindref="member">mode</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>1<sp/>byte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1a823e19d448e6540ea0bfc6844ffc96f1" kindref="member">range</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>1<sp/>byte.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1afdd04830ac70e2435cfce3d7be601e9c" kindref="member">updateInterval</ref>)<sp/>==<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>4<sp/>bytes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(settings.<ref refid="structDataLoggerService_1_1Settings_1a4bde857f31f27e5574b9d204c7a5aa48" kindref="member">timestamp</ref>)<sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>to<sp/>be<sp/>4<sp/>bytes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>value;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qdatastream" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QDataStream</ref><sp/>stream(&amp;value,<sp/><ref refid="qiodevicebase_1OpenModeFlag-enum" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QIODevice::WriteOnly</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.<ref refid="qdatastream_1setByteOrder" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">setByteOrder</ref>(<ref refid="qdatastream_1ByteOrder-enum" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QDataStream::LittleEndian</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.<ref refid="qdatastream_1setFloatingPointPrecision" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">setFloatingPointPrecision</ref>(<ref refid="qdatastream_1FloatingPointPrecision-enum" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QDataStream::SinglePrecision</ref>);<sp/></highlight><highlight class="comment">//<sp/>32-bit<sp/>floats,<sp/>not<sp/>64-bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(quint8)settings.<ref refid="structDataLoggerService_1_1Settings_1a71c4c7e8417ee7a187c09a89057c5ab7" kindref="member">command</ref><sp/>&lt;&lt;<sp/>settings.<ref refid="structDataLoggerService_1_1Settings_1a5a55213ca7361364642dffa9f8b77ec7" kindref="member">arguments</ref><sp/>&lt;&lt;<sp/>(quint8)settings.<ref refid="structDataLoggerService_1_1Settings_1ac72c18db4e38d95664c456c527e352f4" kindref="member">mode</ref><sp/>&lt;&lt;<sp/>settings.<ref refid="structDataLoggerService_1_1Settings_1a823e19d448e6540ea0bfc6844ffc96f1" kindref="member">range</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\pokitApi<sp/>For<sp/>Pokit<sp/>Meter,<sp/>`updateInterval`<sp/>is<sp/>`uint16`<sp/>seconds<sp/>(as<sp/>per<sp/>the<sp/>Pokit<sp/>API<sp/>1.00),</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>however<sp/>for<sp/>Pokit<sp/>Pro<sp/>it&apos;s<sp/>`uint32`<sp/>milliseconds,<sp/>even<sp/>though<sp/>that&apos;s<sp/>not<sp/>officially</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>documented<sp/>anywhere.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!updateIntervalIs32bit)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(quint16)((settings.<ref refid="structDataLoggerService_1_1Settings_1afdd04830ac70e2435cfce3d7be601e9c" kindref="member">updateInterval</ref>+500)/1000)<sp/>&lt;&lt;<sp/>settings.<ref refid="structDataLoggerService_1_1Settings_1a4bde857f31f27e5574b9d204c7a5aa48" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>==<sp/>11);<sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>Pokit<sp/>API<sp/>1.00.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>settings.<ref refid="structDataLoggerService_1_1Settings_1afdd04830ac70e2435cfce3d7be601e9c" kindref="member">updateInterval</ref><sp/>&lt;&lt;<sp/>settings.<ref refid="structDataLoggerService_1_1Settings_1a4bde857f31f27e5574b9d204c7a5aa48" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_ASSERT(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>==<sp/>13);<sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>testing<sp/>/<sp/>experimentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>`Metadata`<sp/>\a<sp/>value<sp/>into<sp/>a<sp/>DataLoggerService::Metatdata<sp/>struct.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classDataLoggerServicePrivate_1aed59b28db53cea0757289a0960bed3fd" refkind="member"><highlight class="normal"><ref refid="structDataLoggerService_1_1Metadata" kindref="compound">DataLoggerService::Metadata</ref><sp/><ref refid="classDataLoggerServicePrivate_1aed59b28db53cea0757289a0960bed3fd" kindref="member">DataLoggerServicePrivate::parseMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDataLoggerService_1_1Metadata" kindref="compound">DataLoggerService::Metadata</ref><sp/>metadata{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDataLoggerService_1a1a3a38ca8befc3de8121d795879140f6a902b0d55fddef6f8d651fe1035b7d4bd" kindref="member">DataLoggerService::LoggerStatus::Error</ref>,<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN(),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771ae599161956d626eda4cb0a5ffb85271c" kindref="member">DataLoggerService::Mode::Idle</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pokit<sp/>Meter:<sp/>15<sp/>bytes,<sp/>Pokit<sp/>Pro:<sp/>23<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Metadata&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>15,<sp/>23))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc)<sp/>&lt;&lt;<sp/>value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(7,12).<ref refid="qbytearray_1toHex" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">toHex</ref>(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata.status<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classDataLoggerService_1a1a3a38ca8befc3de8121d795879140f6" kindref="member">DataLoggerService::LoggerStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(0));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata.scale<sp/><sp/>=<sp/>qFromLittleEndian&lt;float&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(1,4).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata.mode<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classDataLoggerService_1ab7fc5073f8ab9d5e93ba7006df685771" kindref="member">DataLoggerService::Mode</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(5));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata.range<sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">quint8</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(6));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\pokitApi<sp/>For<sp/>Pokit<sp/>Meter,<sp/>`updateInterval`<sp/>is<sp/>`uint16`<sp/>(as<sp/>per<sp/>the<sp/>Pokit<sp/>API<sp/>1.00),<sp/>however</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>Pokit<sp/>Pro<sp/>it&apos;s<sp/>`uint32`,<sp/>even<sp/>though<sp/>that&apos;s<sp/>not<sp/>officially<sp/>documented<sp/>anywhere.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Also<sp/>note,<sp/>the<sp/>doc<sp/>claims<sp/>&apos;microseconds&apos;<sp/>(ie<sp/>10^-6),<sp/>but<sp/>clearly<sp/>the<sp/>value<sp/>is<sp/>&apos;milliseconds&apos;</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(ie<sp/>10^-3)<sp/>for<sp/>Pokit<sp/>Pro,<sp/>and<sp/>whole<sp/>seconds<sp/>for<sp/>Pokit<sp/>Meter.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>==<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.updateInterval<sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(7,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>())*1000;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.numberOfSamples<sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(9,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.timestamp<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint32&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(11,4).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>==<sp/>23)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.updateInterval<sp/><sp/>=<sp/>qFromLittleEndian&lt;quint32&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(7,4).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.numberOfSamples<sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(11,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.timestamp<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint32&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(19,4).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>decode<sp/>metadata<sp/>of<sp/>%n<sp/>byte/s:<sp/>%1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>())</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classAbstractPokitServicePrivate_1af748600fc201fe47f29b58e8e93179d8" kindref="member">toHexString</ref>(value));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="433"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>`Reading`<sp/>\a<sp/>value<sp/>into<sp/>a<sp/>DataLoggerService::Samples<sp/>vector.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="classDataLoggerServicePrivate_1aa929b0252b19e3dc2b40fe1b3e94663d" refkind="member"><highlight class="normal"><ref refid="qvector" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">DataLoggerService::Samples</ref><sp/><ref refid="classDataLoggerServicePrivate_1aa929b0252b19e3dc2b40fe1b3e94663d" kindref="member">DataLoggerServicePrivate::parseSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qvector" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">DataLoggerService::Samples</ref><sp/>samples;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()%2)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Samples<sp/>value<sp/>has<sp/>odd<sp/>size<sp/>%1<sp/>(should<sp/>be<sp/>even):<sp/>%2&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classAbstractPokitServicePrivate_1af748600fc201fe47f29b58e8e93179d8" kindref="member">toHexString</ref>(value));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((samples.<ref refid="qlist_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()*2)<sp/>&lt;<sp/>value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples.<ref refid="qlist_1append" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">append</ref>(qFromLittleEndian&lt;qint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(samples.<ref refid="qlist_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()*2,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>()));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Read<sp/>%n<sp/>sample/s<sp/>from<sp/>%1-bytes.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>samples.<ref refid="qlist_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="451"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>Implements<sp/>AbstractPokitServicePrivate::characteristicRead<sp/>to<sp/>parse<sp/>\a<sp/>value,<sp/>then<sp/>emit<sp/>a</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>specialised<sp/>signal,<sp/>for<sp/>each<sp/>supported<sp/>\a<sp/>characteristic.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="classDataLoggerServicePrivate_1a91ded6976e79e6054954eebe591214be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerServicePrivate_1a91ded6976e79e6054954eebe591214be" kindref="member">DataLoggerServicePrivate::characteristicRead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>&amp;characteristic,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a84bef330c6ff124f1e460bb8949d82da" kindref="member">AbstractPokitServicePrivate::characteristicRead</ref>(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ab5fa52ba8b4cacf839abe6d3f8e8a929" kindref="member">DataLoggerService::CharacteristicUuids::settings</ref>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Settings<sp/>characteristic<sp/>is<sp/>write-only,<sp/>but<sp/>somehow<sp/>read&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">DataLoggerService::CharacteristicUuids::metadata</ref>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;metadataRead(<ref refid="classDataLoggerServicePrivate_1aed59b28db53cea0757289a0960bed3fd" kindref="member">parseMetadata</ref>(value));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ae49f85e600ca4eb2753818bb2ef32d65" kindref="member">DataLoggerService::CharacteristicUuids::reading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>characteristic<sp/>is<sp/>notify-only&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>characteristic<sp/>read<sp/>for<sp/>Data<sp/>Logger<sp/>service&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>Implements<sp/>AbstractPokitServicePrivate::characteristicWritten<sp/>to<sp/>parse<sp/>\a<sp/>newValue,<sp/>then<sp/>emit<sp/>a</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/>specialised<sp/>signal,<sp/>for<sp/>each<sp/>supported<sp/>\a<sp/>characteristic.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classDataLoggerServicePrivate_1a6988cc8bf165d4bf1fcdacf7124ea6f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerServicePrivate_1a6988cc8bf165d4bf1fcdacf7124ea6f9" kindref="member">DataLoggerServicePrivate::characteristicWritten</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>&amp;characteristic,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;newValue)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1aaf4a6cb9f0b1fe537877d615a6634201" kindref="member">AbstractPokitServicePrivate::characteristicWritten</ref>(characteristic,<sp/>newValue);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ab5fa52ba8b4cacf839abe6d3f8e8a929" kindref="member">DataLoggerService::CharacteristicUuids::settings</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;settingsWritten();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">DataLoggerService::CharacteristicUuids::metadata</ref>)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Metadata<sp/>characteristic<sp/>is<sp/>read/notify,<sp/>but<sp/>somehow<sp/>written&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ae49f85e600ca4eb2753818bb2ef32d65" kindref="member">DataLoggerService::CharacteristicUuids::reading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>characteristic<sp/>is<sp/>notify-only,<sp/>but<sp/>somehow<sp/>written&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>characteristic<sp/>written<sp/>for<sp/>Data<sp/>Logger<sp/>service&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="513"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*<sp/>Implements<sp/>AbstractPokitServicePrivate::characteristicChanged<sp/>to<sp/>parse<sp/>\a<sp/>newValue,<sp/>then<sp/>emit<sp/>a</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*<sp/>specialised<sp/>signal,<sp/>for<sp/>each<sp/>supported<sp/>\a<sp/>characteristic.</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="classDataLoggerServicePrivate_1a687b443e1e36e2c07a9776a6ca02e688" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDataLoggerServicePrivate_1a687b443e1e36e2c07a9776a6ca02e688" kindref="member">DataLoggerServicePrivate::characteristicChanged</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>&amp;characteristic,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;newValue)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a642431b7bfb76baa5d976ae24e90d9ef" kindref="member">AbstractPokitServicePrivate::characteristicChanged</ref>(characteristic,<sp/>newValue);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="classDataLoggerService" kindref="compound">DataLoggerService</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ab5fa52ba8b4cacf839abe6d3f8e8a929" kindref="member">DataLoggerService::CharacteristicUuids::settings</ref>)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Settings<sp/>characteristic<sp/>is<sp/>write-only,<sp/>but<sp/>somehow<sp/>updated&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1a360ad74780e776a1233d73e5416db0e9" kindref="member">DataLoggerService::CharacteristicUuids::metadata</ref>)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;metadataRead(<ref refid="classDataLoggerServicePrivate_1aed59b28db53cea0757289a0960bed3fd" kindref="member">parseMetadata</ref>(newValue));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structDataLoggerService_1_1CharacteristicUuids_1ae49f85e600ca4eb2753818bb2ef32d65" kindref="member">DataLoggerService::CharacteristicUuids::reading</ref>)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;samplesRead(<ref refid="classDataLoggerServicePrivate_1aa929b0252b19e3dc2b40fe1b3e94663d" kindref="member">parseSamples</ref>(newValue));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>characteristic<sp/>notified<sp/>for<sp/>Data<sp/>Logger<sp/>service&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="543"><highlight class="comment">///<sp/>\endcond</highlight></codeline>
    </programlisting>
    <location file="/home/paul/src/dokit/src/lib/dataloggerservice.cpp"/>
  </compounddef>
</doxygen>
