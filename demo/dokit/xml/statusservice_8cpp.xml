<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.0" xml:lang="en-US">
  <compounddef id="statusservice_8cpp" kind="file" language="C++">
    <compoundname>statusservice.cpp</compoundname>
    <includes refid="statusservice_8h" local="no">qtpokit/statusservice.h</includes>
    <includes refid="statusservice__p_8h" local="yes">statusservice_p.h</includes>
    <includes local="no">QtEndian</includes>
    <incdepgraph>
      <node id="3">
        <label>abstractpokitservice.h</label>
        <link refid="abstractpokitservice_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pokitproducts.h</label>
        <link refid="pokitproducts_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>qtpokit_global.h</label>
        <link refid="qtpokit__global_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>qtpokit/statusservice.h</label>
        <link refid="statusservice_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>abstractpokitservice_p.h</label>
        <link refid="abstractpokitservice__p_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>statusservice.cpp</label>
        <link refid="statusservice_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>statusservice_p.h</label>
        <link refid="statusservice__p_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>QBluetoothAddress</label>
      </node>
      <node id="7">
        <label>QBluetoothDeviceInfo</label>
      </node>
      <node id="14">
        <label>QBluetoothUuid</label>
      </node>
      <node id="8">
        <label>QFlags</label>
      </node>
      <node id="18">
        <label>QLoggingCategory</label>
      </node>
      <node id="10">
        <label>QLowEnergyService</label>
      </node>
      <node id="11">
        <label>QObject</label>
      </node>
      <node id="9">
        <label>QString</label>
      </node>
      <node id="15">
        <label>QVersionNumber</label>
      </node>
      <node id="19">
        <label>QtEndian</label>
      </node>
      <node id="5">
        <label>QtGlobal</label>
      </node>
      <node id="12">
        <label>optional</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Defines the <ref refid="classStatusService" kindref="compound">StatusService</ref> and <ref refid="classStatusServicePrivate" kindref="compound">StatusServicePrivate</ref> classes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2022-2024<sp/>Paul<sp/>Colby<sp/>&lt;git@colby.id.au&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>\file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Defines<sp/>the<sp/>StatusService<sp/>and<sp/>StatusServicePrivate<sp/>classes.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="statusservice_8h" kindref="compound">qtpokit/statusservice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statusservice__p_8h" kindref="compound">statusservice_p.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtEndian&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>\class<sp/>StatusService</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>StatusService<sp/>class<sp/>accesses<sp/>the<sp/>`Pokit<sp/>Status`<sp/>service<sp/>of<sp/>Pokit<sp/>devices.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>\struct<sp/>StatusService::ServiceUuids</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>\pokitApi<sp/>Pokit<sp/>API<sp/>1.00<sp/>(and<sp/>0.02)<sp/>states<sp/>the<sp/>Status<sp/>Service<sp/>UUID<sp/>as</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>`57d3a771-267c-4394-8872-78223e92aec4`<sp/>which<sp/>is<sp/>correct<sp/>for<sp/>the<sp/>Pokit<sp/>Meter,<sp/>but<sp/>Pokit<sp/>Pro<sp/>uses</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>`57d3a771-267c-4394-8872-78223e92aec5`<sp/>instead,<sp/>that<sp/>is<sp/>the<sp/>last<sp/>digit<sp/>is<sp/>a<sp/>`5`<sp/>not<sp/>`4`.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>\endcond</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>status<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35" kindref="member">StatusService::DeviceStatus</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35ae599161956d626eda4cb0a5ffb85271c" kindref="member">DeviceStatus::Idle</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Idle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a460d1e2dcc6882dc5e0557f9ac227442" kindref="member">DeviceStatus::MultimeterDcVoltage</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterDcVoltage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35ac5436b6539f4a0672077f7bc82afe76e" kindref="member">DeviceStatus::MultimeterAcVoltage</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterAcVoltage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a822a755216a42f263e6b20e8edbd536b" kindref="member">DeviceStatus::MultimeterDcCurrent</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterDcCurrent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a2531beafde4cd45ccd7c3cbaa3777681" kindref="member">DeviceStatus::MultimeterAcCurrent</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterAcCurrent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35aa44739725ce1db60f3612f375b280ac4" kindref="member">DeviceStatus::MultimeterResistance</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterResistance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35ab1d9e2e752fecd6a87793d19b0315582" kindref="member">DeviceStatus::MultimeterDiode</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterDiode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a08e57a78bddbe890c39f6ea84d9ff697" kindref="member">DeviceStatus::MultimeterContinuity</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterContinuity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a8c9853c1b8ace5cb84259e2b72ee1ec5" kindref="member">DeviceStatus::MultimeterTemperature</ref>:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultimeterTemperature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a8098421ff80cec88fe80fd1bd056ee38" kindref="member">DeviceStatus::DsoModeSampling</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;DsoModeSampling&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35a33c0c04ddb28630380d6e89cc3ef2cca" kindref="member">DeviceStatus::LoggerModeSampling</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;LoggerModeSampling&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>status<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classStatusService_1aab6278d4fe2bedc916fc3d96641eaa30" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68" kindref="member">StatusService::BatteryStatus</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68a28d0edd045e05cf5af64e35ae0c4c6ef" kindref="member">BatteryStatus::Low</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Low&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68a0c6ad70beb3a7e76c3fc7adab7c46acc" kindref="member">BatteryStatus::Good</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Good&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>\enum<sp/>StatusService::SwitchPosition</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>\pokitApi<sp/>These<sp/>enum<sp/>values<sp/>are<sp/>undocumented,<sp/>but<sp/>easily<sp/>testable<sp/>with<sp/>a<sp/>physical<sp/>Pokit<sp/>Pro<sp/>device.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Internally,<sp/>Pokit&apos;s<sp/>Android<sp/>app<sp/>calls<sp/>these:<sp/>`SWITCH_MODE_VOLTAGE`,<sp/>`SWITCH_MODE_ALL`<sp/>and<sp/>`SWITCH_MODE_CURRENT`.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>\endcond</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>position<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classStatusService_1a619989ef8ed6bb9e91c1326d911e23c9" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a6bb2f85b6df9942ee108c341f4162e1f" kindref="member">StatusService::SwitchPosition</ref><sp/>&amp;position)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(position)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a6bb2f85b6df9942ee108c341f4162e1fa4a92fbe41f6463598c39850b8335096c" kindref="member">SwitchPosition::Voltage</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Voltage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a6bb2f85b6df9942ee108c341f4162e1fa6295e8a4ca812df79186b50cc61f1f11" kindref="member">SwitchPosition::MultiMode</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;MultiMode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a6bb2f85b6df9942ee108c341f4162e1fa2470ea40cf88a5215231698770d9c489" kindref="member">SwitchPosition::HighCurrent</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;HighCurrent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>status<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classStatusService_1a5e5d307e56870f2a65e9ccf79429bff7" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1af7f9dcc8c9cfa0a1cd9491b829234dc1" kindref="member">StatusService::ChargingStatus</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1af7f9dcc8c9cfa0a1cd9491b829234dc1a656b8990f73ffbc5dbd823738f3126c9" kindref="member">ChargingStatus::Discharging</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Discharging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1af7f9dcc8c9cfa0a1cd9491b829234dc1ad7b54fc61b65b19c4694a29b6044aacd" kindref="member">ChargingStatus::Charging</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Charging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1af7f9dcc8c9cfa0a1cd9491b829234dc1ab1c2b9d67c3196aa206d0443269ed775" kindref="member">ChargingStatus::Charged</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Charged&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>status<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classStatusService_1a490e0f1d95063c7e0aabaed33f3f8b22" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08bad15305d7a4e34e02489c74a5ef542f36" kindref="member">TorchStatus::Off</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Off&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08ba521c36a31c2762741cf0f8890cbe05e3" kindref="member">TorchStatus::On</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;On&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>string<sp/>version<sp/>of<sp/>the<sp/>\a<sp/>status<sp/>enum<sp/>label.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classStatusService_1a681701df043e0490ed38d127a86f9afb" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082eb" kindref="member">StatusService::ButtonStatus</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082ebaea1e34304a5d8ffa7c9b0ed8ede4ef1a" kindref="member">ButtonStatus::Released</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Released&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082ebad78a68f6a85421ae121c2cb5b73a1040" kindref="member">ButtonStatus::Pressed</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Pressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082ebaeffe06cc3bbfdd18fa0d95a403cd2d3f" kindref="member">ButtonStatus::Held</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Held&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>Pokit<sp/>service<sp/>with<sp/>\a<sp/>parent.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classStatusService_1a095254046689e5115ba053c029a2e1b8" refkind="member"><highlight class="normal"><ref refid="classStatusService_1a095254046689e5115ba053c029a2e1b8" kindref="member">StatusService::StatusService</ref>(<ref refid="qlowenergycontroller" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyController</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>controller,<sp/><ref refid="qobject" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QObject</ref><sp/>*<sp/>parent)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitService" kindref="compound">AbstractPokitService</ref>(new<sp/><ref refid="classStatusServicePrivate" kindref="compound">StatusServicePrivate</ref>(controller,<sp/>this),<sp/>parent)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>Pokit<sp/>service<sp/>with<sp/>\a<sp/>parent,<sp/>and<sp/>private<sp/>implementation<sp/>\a<sp/>d.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classStatusService_1a8c5a28d187cd6cbb61242ff9fef2d25c" refkind="member"><highlight class="normal"><ref refid="classStatusService_1a095254046689e5115ba053c029a2e1b8" kindref="member">StatusService::StatusService</ref>(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classStatusServicePrivate" kindref="compound">StatusServicePrivate</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d,<sp/><ref refid="qobject" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QObject</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parent)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitService" kindref="compound">AbstractPokitService</ref>(d,<sp/>parent)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">///<sp/>\endcond</highlight></codeline>
<codeline lineno="141"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Destroys<sp/>this<sp/>StatusService<sp/>object.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classStatusService_1a6140c2723538587220452d6d4a51f001" refkind="member"><highlight class="normal"><ref refid="classStatusService_1a6140c2723538587220452d6d4a51f001" kindref="member">StatusService::~StatusService</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classStatusService_1ad73514f6f324ca56dffb844b14eb3bc0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ad73514f6f324ca56dffb844b14eb3bc0" kindref="member">StatusService::readCharacteristics</ref>()</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/><ref refid="classStatusService_1adca5ca235e99c7878f8fde507bf487cc" kindref="member">readDeviceCharacteristics</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/><ref refid="classStatusService_1a0410049da4a7ac6a64027c733797c578" kindref="member">readStatusCharacteristic</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r3<sp/>=<sp/><ref refid="classStatusService_1a1540af10953c1b4b7d08620ade8c27ea" kindref="member">readNameCharacteristic</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r4<sp/>=<sp/>((<ref refid="classAbstractPokitService_1a7a4ff74f51ba6ea6c01cbeb9eda15b9b" kindref="member">service</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(<ref refid="classAbstractPokitService_1a7a4ff74f51ba6ea6c01cbeb9eda15b9b" kindref="member">service</ref>()-&gt;<ref refid="qlowenergyservice_1characteristic" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">characteristic</ref>(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>).<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>()))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="classStatusService_1afeb96c51e64da0265ab7d026233541d4" kindref="member">readTorchCharacteristic</ref>()<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>r5<sp/>=<sp/>((<ref refid="classAbstractPokitService_1a7a4ff74f51ba6ea6c01cbeb9eda15b9b" kindref="member">service</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(<ref refid="classAbstractPokitService_1a7a4ff74f51ba6ea6c01cbeb9eda15b9b" kindref="member">service</ref>()-&gt;<ref refid="qlowenergyservice_1characteristic" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">characteristic</ref>(<ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">CharacteristicUuids::buttonPress</ref>).<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>()))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="classStatusService_1a29d3830c398e06a59b815c6f5d475fec" kindref="member">readButtonPressCharacteristic</ref>()<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(r1<sp/>&amp;&amp;<sp/>r2<sp/>&amp;&amp;<sp/>r3<sp/>&amp;&amp;<sp/>r4<sp/>&amp;&amp;<sp/>r5);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>Read<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>`Device<sp/>Characteristics`<sp/>characteristic.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>Emits<sp/>deviceCharacteristicsRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classStatusService_1adca5ca235e99c7878f8fde507bf487cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1adca5ca235e99c7878f8fde507bf487cc" kindref="member">StatusService::readDeviceCharacteristics</ref>()</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1ab883f16924c3c325a3400a5146d48ac0" kindref="member">CharacteristicUuids::deviceCharacteristics</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>Read<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>`Status`<sp/>characteristic.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>Emits<sp/>deviceStatusRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classStatusService_1a0410049da4a7ac6a64027c733797c578" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a0410049da4a7ac6a64027c733797c578" kindref="member">StatusService::readStatusCharacteristic</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">CharacteristicUuids::status</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>Read<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>`Name`<sp/>characteristic.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>Emits<sp/>deviceNameRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classStatusService_1a1540af10953c1b4b7d08620ade8c27ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a1540af10953c1b4b7d08620ade8c27ea" kindref="member">StatusService::readNameCharacteristic</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a3ca6f44f245a642f2a5e9147255a7bd8" kindref="member">CharacteristicUuids::name</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>Read<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>(undocumented)<sp/>`Torch`<sp/>characteristic.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Emits<sp/>torchStatusRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classStatusService_1afeb96c51e64da0265ab7d026233541d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1afeb96c51e64da0265ab7d026233541d4" kindref="member">StatusService::readTorchCharacteristic</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Read<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>(undocumented)<sp/>`Button<sp/>Press`<sp/>characteristic.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>read<sp/>request<sp/>is<sp/>succesfully<sp/>queued,<sp/>`false`<sp/>otherwise<sp/>(ie<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>underlying<sp/>controller<sp/>it<sp/>not<sp/>yet<sp/>connected<sp/>to<sp/>the<sp/>Pokit<sp/>device,<sp/>or<sp/>the<sp/>device&apos;s<sp/>services<sp/>have</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>not<sp/>yet<sp/>been<sp/>discovered).</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>Emits<sp/>buttonPressRead()<sp/>if/when<sp/>the<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classStatusService_1a29d3830c398e06a59b815c6f5d475fec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a29d3830c398e06a59b815c6f5d475fec" kindref="member">StatusService::readButtonPressCharacteristic</ref>()</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;readCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">CharacteristicUuids::buttonPress</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>`Device<sp/>Characteristics`<sp/>characteristic.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(ie<sp/>the<sp/>serviceDetailsDiscovered<sp/>signal<sp/>has<sp/>not<sp/>been<sp/>emitted<sp/>yet),<sp/>then<sp/>a</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>null<sp/>result<sp/>is<sp/>returned,<sp/>which<sp/>can<sp/>be<sp/>checked<sp/>via<sp/>the<sp/>returned</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>DeviceCharacteristics::firmwareVersion,<sp/>like:</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>const<sp/>DeviceCharacteristics<sp/>characteristics<sp/>=<sp/>service-&gt;deviceCharacteristics();</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>if<sp/>(!characteristics.firmwareVersion.isNull())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classStatusService_1a008d41a33eedd90e68ccf7a94ed5b65f" refkind="member"><highlight class="normal"><ref refid="structStatusService_1_1DeviceCharacteristics" kindref="compound">StatusService::DeviceCharacteristics</ref><sp/><ref refid="classStatusService_1a008d41a33eedd90e68ccf7a94ed5b65f" kindref="member">StatusService::deviceCharacteristics</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="253"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1ab883f16924c3c325a3400a5146d48ac0" kindref="member">CharacteristicUuids::deviceCharacteristics</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="classStatusServicePrivate_1a7bdbc14dbfe0a29bb0333c01890a6ced" kindref="member">StatusServicePrivate::parseDeviceCharacteristics</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structStatusService_1_1DeviceCharacteristics" kindref="compound">StatusService::DeviceCharacteristics</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`Status`<sp/>service&apos;s<sp/>`Status`<sp/>characteristic.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(ie<sp/>the<sp/>serviceDetailsDiscovered<sp/>signal<sp/>has<sp/>not<sp/>been<sp/>emitted<sp/>yet),<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>returned<sp/>StatusService::Status::batteryLevel<sp/>member<sp/>will<sp/>be<sp/>a<sp/>quiet<sp/>NaN,<sp/>which<sp/>can<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>like:</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>const<sp/>StatusService::Status<sp/>status<sp/>=<sp/>statusService-&gt;status();</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>if<sp/>(qIsNaN(status.batteryVoltage))<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>Handle<sp/>failure.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>```</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>Not<sp/>all<sp/>Pokit<sp/>devices<sp/>support<sp/>the<sp/>Status::batteryStatus<sp/>member,<sp/>in<sp/>which<sp/>case<sp/>the<sp/>member<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>initilialised<sp/>to<sp/>the<sp/>maximum<sp/>value<sp/>supported<sp/>by<sp/>the<sp/>underlying<sp/>type<sp/>(ie<sp/>`255`)<sp/>to<sp/>indicate<sp/>&quot;not<sp/>set&quot;</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" refkind="member"><highlight class="normal"><ref refid="structStatusService_1_1Status" kindref="compound">StatusService::Status</ref><sp/><ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">StatusService::status</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">CharacteristicUuids::status</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>?<sp/><ref refid="classStatusServicePrivate_1a3a6ff8ca3e9d7c884b269e52dd43aeb0" kindref="member">StatusServicePrivate::parseStatus</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structStatusService_1_1Status" kindref="compound">StatusService::Status</ref>{<sp/><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35ae599161956d626eda4cb0a5ffb85271c" kindref="member">DeviceStatus::Idle</ref>,<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN(),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68a28d0edd045e05cf5af64e35ae0c4c6ef" kindref="member">BatteryStatus::Low</ref>,<sp/>std::nullopt,<sp/>std::nullopt<sp/>};</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>Enables<sp/>client-side<sp/>notifications<sp/>of<sp/>device<sp/>status<sp/>changes.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>alternative<sp/>to<sp/>manually<sp/>requesting<sp/>individual<sp/>reads<sp/>via<sp/>readStatusCharacteristic().</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>Successfully<sp/>read<sp/>values<sp/>(if<sp/>any)<sp/>will<sp/>be<sp/>emitted<sp/>via<sp/>the<sp/>deviceStatusRead()<sp/>signal.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classStatusService_1a5d86bed23202402cade7fa8bb09f9c48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a5d86bed23202402cade7fa8bb09f9c48" kindref="member">StatusService::enableStatusNotifications</ref>()</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;enableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">CharacteristicUuids::status</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>Disables<sp/>client-side<sp/>notifications<sp/>of<sp/>device<sp/>status<sp/>changes.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>Instantaneous<sp/>status<sp/>can<sp/>still<sp/>be<sp/>fetched<sp/>by<sp/>readStatusCharacteristic().</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classStatusService_1a1beab67430fc8bc26e9faf3799d537f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a1beab67430fc8bc26e9faf3799d537f1" kindref="member">StatusService::disableStatusNotifications</ref>()</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;disableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">CharacteristicUuids::status</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`Status`<sp/>services&apos;s<sp/>`Device<sp/>Name`<sp/>characteristic.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(ie<sp/>the<sp/>serviceDetailsDiscovered<sp/>signal<sp/>has<sp/>not<sp/>been<sp/>emitted<sp/>yet),<sp/>then<sp/>a</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>null<sp/>QString<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classStatusService_1a113a7051f70e642d2c1f67124c1f12c7" refkind="member"><highlight class="normal"><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/><ref refid="classStatusService_1a113a7051f70e642d2c1f67124c1f12c7" kindref="member">StatusService::deviceName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="326"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a3ca6f44f245a642f2a5e9147255a7bd8" kindref="member">CharacteristicUuids::name</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>?<sp/><ref refid="qstring_1fromUtf8-1" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString::fromUtf8</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())<sp/>:<sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>Set&apos;s<sp/>the<sp/>Pokit<sp/>device&apos;s<sp/>name<sp/>to<sp/>\a<sp/>name.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>if<sp/>the<sp/>write<sp/>request<sp/>was<sp/>successfully<sp/>queued,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>Emits<sp/>deviceNameWritten()<sp/>if/when<sp/>the<sp/>\a<sp/>name<sp/>has<sp/>been<sp/>set.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classStatusService_1ada280bc54493f85e6855a2534bf2a02d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ada280bc54493f85e6855a2534bf2a02d" kindref="member">StatusService::setDeviceName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/>&amp;name)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a3ca6f44f245a642f2a5e9147255a7bd8" kindref="member">CharacteristicUuids::name</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>value<sp/>=<sp/>name.<ref refid="qstring_1toUtf8" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">toUtf8</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1length" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">length</ref>()<sp/>&gt;<sp/>11)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(d-&gt;lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(R</highlight><highlight class="stringliteral">&quot;(Device<sp/>name<sp/>&quot;%1&quot;<sp/>is<sp/>too<sp/>long<sp/>(%2<sp/>&gt;<sp/>11<sp/>bytes):<sp/>0x3)&quot;)</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(name).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(value.<ref refid="qbytearray_1length" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">length</ref>()).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(value.<ref refid="qbytearray_1toHex" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">toHex</ref>()));</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;service-&gt;writeCharacteristic(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d-&gt;service-&gt;error()<sp/>!=<sp/>QLowEnergyService::ServiceError::CharacteristicWriteError);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>Flash<sp/>the<sp/>Pokit<sp/>device&apos;s<sp/>LED.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>if<sp/>the<sp/>flash<sp/>request<sp/>was<sp/>successfully<sp/>queued,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>Emits<sp/>deviceLedFlashed()<sp/>if/when<sp/>the<sp/>LED<sp/>has<sp/>flashed<sp/>successfully.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>\note<sp/>This<sp/>operation<sp/>is<sp/>only<sp/>supported<sp/>by<sp/>Pokit<sp/>Meter<sp/>devices.<sp/>Pokit<sp/>Pro<sp/>devices<sp/>will<sp/>report<sp/>an</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>Bluetooth<sp/>ATT<sp/>error<sp/>`0x80`.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>\pokitApi<sp/>The<sp/>Android<sp/>app<sp/>can<sp/>turn<sp/>Pokit<sp/>Pro<sp/>LEDs<sp/>on/off.<sp/>Perhaps<sp/>that<sp/>is<sp/>handled<sp/>by<sp/>an</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>undocumented<sp/>use<sp/>of<sp/>this<sp/>characteristic.<sp/>Or<sp/>perhaps<sp/>its<sp/>via<sp/>some<sp/>other<sp/>service.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>\endcond</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classStatusService_1a425bf65d42b24c4a621b312fcd152708" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a425bf65d42b24c4a621b312fcd152708" kindref="member">StatusService::flashLed</ref>()</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1aeb51331d2510873d95a5993e62aa2cf0" kindref="member">CharacteristicUuids::flashLed</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Flash<sp/>LED<sp/>characeristic<sp/>is<sp/>write-only,<sp/>and<sp/>takes<sp/>a<sp/>single<sp/>uint8<sp/>&quot;LED&quot;<sp/>parameter,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>always<sp/>be<sp/>1.<sp/>Presumably<sp/>this<sp/>is<sp/>an<sp/>index<sp/>for<sp/>which<sp/>LED<sp/>to<sp/>flash,<sp/>but<sp/>the<sp/>Pokit<sp/>API<sp/>docs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>say<sp/>that<sp/>&quot;any<sp/>value<sp/>other<sp/>than<sp/>1<sp/>will<sp/>be<sp/>ignored&quot;,<sp/>which<sp/>makes<sp/>sense<sp/>given<sp/>that<sp/>all<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pokit<sp/>devices<sp/>have<sp/>only<sp/>one<sp/>LED.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>value(1,<sp/></highlight><highlight class="stringliteral">&apos;\x01&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;service-&gt;writeCharacteristic(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d-&gt;service-&gt;error()<sp/>!=<sp/>QLowEnergyService::ServiceError::CharacteristicWriteError);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`Status`<sp/>services&apos;s<sp/>`Torch`<sp/>characteristic.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(eg<sp/>if<sp/>the<sp/>device<sp/>does<sp/>not<sp/>support<sp/>the<sp/>Torch<sp/>characteristic),<sp/>then<sp/>`nullopt`</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="classStatusService_1acb4787284fb5314ee2085421ad4c1d36" refkind="member"><highlight class="normal">std::optional&lt;StatusService::TorchStatus&gt;<sp/><ref refid="classStatusService_1acb4787284fb5314ee2085421ad4c1d36" kindref="member">StatusService::torchStatus</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="401"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=<sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>?<sp/><ref refid="classStatusServicePrivate_1abe408253ab1c7f08e09d7613691befba" kindref="member">StatusServicePrivate::parseTorchStatus</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())<sp/>:<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>Set<sp/>the<sp/>Pokit<sp/>device&apos;s<sp/>torch<sp/>to<sp/>\a<sp/>status.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>if<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>queued,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>Emits<sp/>torchStatusWritten()<sp/>if/when<sp/>the<sp/>LED<sp/>has<sp/>flashed<sp/>successfully.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>\note<sp/>This<sp/>operation<sp/>is<sp/>only<sp/>supported<sp/>by<sp/>Pokit<sp/>Pro<sp/>devices,<sp/>and<sp/>not<sp/>Pokit<sp/>Meter<sp/>devices.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classStatusService_1a3bc469455e6e704e0643fbc9ad236c70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a3bc469455e6e704e0643fbc9ad236c70" kindref="member">StatusService::setTorchStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref><sp/>status)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=<sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>value(1,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classStatusService_1ae7be4aae021ae50faef48ed2812eb6a7" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;service-&gt;writeCharacteristic(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d-&gt;service-&gt;error()<sp/>!=<sp/>QLowEnergyService::ServiceError::CharacteristicWriteError);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>Enables<sp/>client-side<sp/>notifications<sp/>of<sp/>torch<sp/>status<sp/>changes.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>alternative<sp/>to<sp/>manually<sp/>requesting<sp/>individual<sp/>reads<sp/>via<sp/>readTorchCharacteristic().</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>Successfully<sp/>read<sp/>values<sp/>(if<sp/>any)<sp/>will<sp/>be<sp/>emitted<sp/>via<sp/>the<sp/>torchStatusRead()<sp/>signal.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classStatusService_1a698e0ba79ea0e7d489e4acdb58830884" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a698e0ba79ea0e7d489e4acdb58830884" kindref="member">StatusService::enableTorchStatusNotifications</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;enableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="444"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>Disables<sp/>client-side<sp/>notifications<sp/>of<sp/>torch<sp/>status<sp/>changes.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>Instantaneous<sp/>torch<sp/>status<sp/>can<sp/>still<sp/>be<sp/>fetched<sp/>by<sp/>readTorchCharacteristic().</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classStatusService_1a8c575b15d296c396d7837c6059f10aa8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a8c575b15d296c396d7837c6059f10aa8" kindref="member">StatusService::disableTorchStatusNotifications</ref>()</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;disableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">CharacteristicUuids::torch</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>Enables<sp/>client-side<sp/>notifications<sp/>of<sp/>button<sp/>presses.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>alternative<sp/>to<sp/>manually<sp/>requesting<sp/>individual<sp/>reads<sp/>via<sp/>readButtonPressCharacteristic().</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>Successfully<sp/>read<sp/>values<sp/>(if<sp/>any)<sp/>will<sp/>be<sp/>emitted<sp/>via<sp/>the<sp/>torchStatusRead()<sp/>signal.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="classStatusService_1a031595af37a535074015a121f0b712bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a031595af37a535074015a121f0b712bb" kindref="member">StatusService::enableButtonPressedNotifications</ref>()</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;enableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">CharacteristicUuids::buttonPress</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/>Disables<sp/>client-side<sp/>notifications<sp/>of<sp/>button<sp/>presses.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>Instantaneous<sp/>button<sp/>press<sp/>statussed<sp/>can<sp/>still<sp/>be<sp/>fetched<sp/>by<sp/>readButtonPressCharacteristic().</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>Returns<sp/>`true`<sp/>is<sp/>the<sp/>request<sp/>was<sp/>successfully<sp/>submited<sp/>to<sp/>the<sp/>device<sp/>queue,<sp/>`false`<sp/>otherwise.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="classStatusService_1ab0d571f2729d69375715b3894ec691ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab0d571f2729d69375715b3894ec691ee" kindref="member">StatusService::disableButtonPressedNotifications</ref>()</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d-&gt;disableCharacteristicNotificatons(<ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">CharacteristicUuids::buttonPress</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="485"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>most<sp/>recent<sp/>value<sp/>of<sp/>the<sp/>`Status`<sp/>services&apos;s<sp/>`Button<sp/>Press`<sp/>characteristic.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>The<sp/>returned<sp/>value,<sp/>if<sp/>any,<sp/>is<sp/>from<sp/>the<sp/>underlying<sp/>Bluetooth<sp/>stack&apos;s<sp/>cache.<sp/>If<sp/>no<sp/>such<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>currently<sp/>available<sp/>(eg<sp/>if<sp/>the<sp/>device<sp/>does<sp/>not<sp/>support<sp/>the<sp/>Torch<sp/>characteristic),<sp/>then<sp/>`nullopt`</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classStatusService_1a658e493f2942afd66263a989e99ed633" refkind="member"><highlight class="normal">std::optional&lt;StatusService::ButtonStatus&gt;<sp/><ref refid="classStatusService_1a658e493f2942afd66263a989e99ed633" kindref="member">StatusService::buttonPress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>characteristic<sp/>=<sp/>d-&gt;getCharacteristic(<ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">CharacteristicUuids::buttonPress</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1isValid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">isValid</ref>())<sp/>?<sp/><ref refid="classStatusServicePrivate_1a90d78c3261bea8f23ddf9804ada203c1" kindref="member">StatusServicePrivate::parseButtonPress</ref>(characteristic.<ref refid="qlowenergycharacteristic_1value" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">value</ref>())<sp/>:<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::deviceCharacteristicsRead</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Device<sp/>Characteristics`<sp/>characteristic<sp/>has<sp/>been<sp/>read</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>successfully.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>\see<sp/>readDeviceCharacteristics</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::deviceNameRead</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Device<sp/>Name`<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>\see<sp/>readDeviceName</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="516"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::deviceNameWritten</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Device<sp/>Name`<sp/>characteristic<sp/>has<sp/>been<sp/>written<sp/>successfully.</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>\see<sp/>setDeviceName</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::deviceStatusRead</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Status`<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>\see<sp/>readDeviceStatus</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="532"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::deviceLedFlashed</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>device&apos;s<sp/>LED<sp/>has<sp/>flashed<sp/>in<sp/>response<sp/>to<sp/>a<sp/>write<sp/>of<sp/>the<sp/>`Flash<sp/>LED`</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*<sp/>characteristic.</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::torchStatusRead</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Torch`<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>\see<sp/>setTorchStatus</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="547"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::torchStatusWritten</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Torch`<sp/>characteristic<sp/>has<sp/>been<sp/>written<sp/>successfully.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>\see<sp/>readTorchCharacteristic</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="555"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>\fn<sp/>StatusService::buttonPressRead</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/>This<sp/>signal<sp/>is<sp/>emitted<sp/>when<sp/>the<sp/>`Button<sp/>Press`<sp/>characteristic<sp/>has<sp/>been<sp/>read<sp/>successfully.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>\see<sp/>readButtonPressCharacteristic</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="563"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>\cond<sp/>internal</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>\class<sp/>StatusServicePrivate</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>The<sp/>StatusServicePrivate<sp/>class<sp/>provides<sp/>private<sp/>implementation<sp/>for<sp/>StatusService.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="570"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/>\internal</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/>Constructs<sp/>a<sp/>new<sp/>StatusServicePrivate<sp/>object<sp/>with<sp/>public<sp/>implementation<sp/>\a<sp/>q.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classStatusServicePrivate_1a15eb3d0b2529f9c9d4ba506b7492b5d5" refkind="member"><highlight class="normal"><ref refid="classStatusServicePrivate_1a15eb3d0b2529f9c9d4ba506b7492b5d5" kindref="member">StatusServicePrivate::StatusServicePrivate</ref>(</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qlowenergycontroller" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyController</ref><sp/>*<sp/>controller,<sp/><ref refid="classStatusService" kindref="compound">StatusService</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>q)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classAbstractPokitServicePrivate" kindref="compound">AbstractPokitServicePrivate</ref>(<ref refid="qbluetoothuuid" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QBluetoothUuid</ref>(),<sp/>controller,<sp/>q)</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>`Device<sp/>Characteristics`<sp/>\a<sp/>value<sp/>into<sp/>a<sp/>DeviceCharacteristics<sp/>struct.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="classStatusServicePrivate_1a7bdbc14dbfe0a29bb0333c01890a6ced" refkind="member"><highlight class="normal"><ref refid="structStatusService_1_1DeviceCharacteristics" kindref="compound">StatusService::DeviceCharacteristics</ref><sp/><ref refid="classStatusServicePrivate_1a7bdbc14dbfe0a29bb0333c01890a6ced" kindref="member">StatusServicePrivate::parseDeviceCharacteristics</ref>(</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStatusService_1_1DeviceCharacteristics" kindref="compound">StatusService::DeviceCharacteristics</ref><sp/>characteristics{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qversionnumber" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QVersionNumber</ref>(),<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="qbluetoothaddress" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QBluetoothAddress</ref>()</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(characteristics.firmwareVersion.isNull());<sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>we<sp/>indicate<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Device<sp/>Characteristics&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>20,<sp/>20))<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>characteristics;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.firmwareVersion<sp/>=<sp/><ref refid="qversionnumber" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QVersionNumber</ref>(</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qFromLittleEndian&lt;quint8<sp/>&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(0,1).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>()),</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qFromLittleEndian&lt;quint8<sp/>&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(1,1).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>()));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.maximumVoltage<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(2,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.maximumCurrent<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(4,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.maximumResistance<sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(6,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.maximumSamplingRate<sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(8,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.samplingBufferSize<sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(10,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.capabilityMask<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>qFromLittleEndian&lt;quint16&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(12,2).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>characteristics.macAddress<sp/>=<sp/><ref refid="qbluetoothaddress" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QBluetoothAddress</ref>(qFromBigEndian&lt;quint64&gt;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref>(2,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>+<sp/>value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(14,6)).constData()));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Firmware<sp/>version:<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.firmwareVersion;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>voltage:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.maximumVoltage;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>current:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.maximumCurrent;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>resistance:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.maximumResistance;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>sampling<sp/>rate:&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.maximumSamplingRate;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Sampling<sp/>buffer<sp/>size:<sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.samplingBufferSize;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Capability<sp/>mask:<sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.capabilityMask;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;MAC<sp/>address:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>characteristics.macAddress;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_ASSERT(!characteristics.firmwareVersion.isNull());<sp/></highlight><highlight class="comment">//<sp/>How<sp/>we<sp/>indicate<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>characteristics;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="621"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>`Status`<sp/>\a<sp/>value<sp/>into<sp/>a<sp/>Status<sp/>struct.<sp/>Note,<sp/>not<sp/>all<sp/>Pokit<sp/>devices<sp/>support<sp/>all<sp/>members</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/>in<sp/>Status.<sp/>Specifically,<sp/>the<sp/>batteryStatus<sp/>member<sp/>is<sp/>not<sp/>usually<sp/>set<sp/>by<sp/>Pokit<sp/>Meter<sp/>devices,<sp/>so</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/>will<sp/>be<sp/>an<sp/>invlalid<sp/>BatteryStatus<sp/>enum<sp/>value<sp/>(`255`)<sp/>in<sp/>that<sp/>case.</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="classStatusServicePrivate_1a3a6ff8ca3e9d7c884b269e52dd43aeb0" refkind="member"><highlight class="normal"><ref refid="structStatusService_1_1Status" kindref="compound">StatusService::Status</ref><sp/><ref refid="classStatusServicePrivate_1a3a6ff8ca3e9d7c884b269e52dd43aeb0" kindref="member">StatusServicePrivate::parseStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structStatusService_1_1Status" kindref="compound">StatusService::Status</ref><sp/>status{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35" kindref="member">StatusService::DeviceStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::numeric_limits&lt;std::underlying_type_t&lt;StatusService::DeviceStatus&gt;&gt;::max()),</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;float&gt;::quiet_NaN(),</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68" kindref="member">StatusService::BatteryStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::numeric_limits&lt;std::underlying_type_t&lt;StatusService::BatteryStatus&gt;&gt;::max()),</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::nullopt,<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\pokitApi<sp/>Pokit<sp/>API<sp/>0.02<sp/>says<sp/>the<sp/>`Status`<sp/>characteristic<sp/>is<sp/>5<sp/>bytes.<sp/>API<sp/>1.00<sp/>then<sp/>added<sp/>an</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>additional<sp/>byte<sp/>for<sp/>`Battery<sp/>Status`,<sp/>for<sp/>6<sp/>bytes<sp/>in<sp/>total.<sp/>However,<sp/>Pokit<sp/>Pro<sp/>devices<sp/>return</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>8<sp/>bytes<sp/>here.<sp/>It<sp/>appears<sp/>that<sp/>the<sp/>first<sp/>of<sp/>those<sp/>2<sp/>extra<sp/>bytes<sp/>(ie<sp/>the<sp/>7th<sp/>byte)<sp/>is<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>indicate<sp/>the<sp/>physical<sp/>switch<sp/>position,<sp/>while<sp/>the<sp/>other<sp/>extra<sp/>byte<sp/>(ie<sp/>the<sp/>8th<sp/>byte)<sp/>indicates</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>device&apos;s<sp/>current<sp/>charging<sp/>status.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>5,<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>status.<ref refid="structStatusService_1_1Status_1aa5d6fe4e5286126d7604c6ceb4da6d11" kindref="member">deviceStatus</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a50ae778be2cb8e49b85ef159be19af35" kindref="member">StatusService::DeviceStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(0));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>status.batteryVoltage<sp/>=<sp/>qFromLittleEndian&lt;float&gt;(value.<ref refid="qbytearray_1mid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">mid</ref>(1,4).<ref refid="qbytearray_1constData" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">constData</ref>());</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>&gt;=<sp/>6)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Battery<sp/>Status<sp/>added<sp/>to<sp/>Pokit<sp/>API<sp/>docs<sp/>v1.00.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.batteryStatus<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a26ca2c6e0c1127261cc28a778512bf68" kindref="member">StatusService::BatteryStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(5));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>&gt;=<sp/>7)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>Position<sp/>-<sp/>as<sp/>yet,<sp/>undocumented<sp/>by<sp/>Pokit<sp/>Innovations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.switchPosition<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a6bb2f85b6df9942ee108c341f4162e1f" kindref="member">StatusService::SwitchPosition</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(6));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.<ref refid="qbytearray_1size" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">size</ref>()<sp/>&gt;=<sp/>8)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Charging<sp/>Status<sp/>-<sp/>as<sp/>yet,<sp/>undocumented<sp/>by<sp/>Pokit<sp/>Innovations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.chargingStatus<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1af7f9dcc8c9cfa0a1cd9491b829234dc1" kindref="member">StatusService::ChargingStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(7));</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Device<sp/>status:<sp/><sp/><sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status.deviceStatus).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status.deviceStatus));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Battery<sp/>voltage:<sp/>%1<sp/>volts&quot;</highlight><highlight class="normal">).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(status.batteryVoltage);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Battery<sp/>status:<sp/><sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status.batteryStatus).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status.batteryStatus));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.switchPosition)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Switch<sp/>position:<sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)*status.switchPosition).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(*status.switchPosition));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.chargingStatus)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Charging<sp/>status:<sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)*status.chargingStatus).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(*status.chargingStatus));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="676"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>torch<sp/>status<sp/>\a<sp/>value,<sp/>and<sp/>returns<sp/>the<sp/>corresponding<sp/>TorchStatus.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="classStatusServicePrivate_1abe408253ab1c7f08e09d7613691befba" refkind="member"><highlight class="normal">std::optional&lt;StatusService::TorchStatus&gt;<sp/><ref refid="classStatusServicePrivate_1abe408253ab1c7f08e09d7613691befba" kindref="member">StatusServicePrivate::parseTorchStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Torch&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>1,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(0));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Torch<sp/>status:<sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="690"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/>Parses<sp/>the<sp/>button<sp/>press<sp/>\a<sp/>value,<sp/>and<sp/>returns<sp/>the<sp/>corresponding<sp/>ButtonStatus.</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="classStatusServicePrivate_1a90d78c3261bea8f23ddf9804ada203c1" refkind="member"><highlight class="normal">std::optional&lt;StatusService::ButtonStatus&gt;<sp/><ref refid="classStatusServicePrivate_1a90d78c3261bea8f23ddf9804ada203c1" kindref="member">StatusServicePrivate::parseButtonPress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Torch&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>2,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\pokitApi<sp/>The<sp/>button<sp/>event<sp/>is<sp/>the<sp/>second<sp/>byte,<sp/>but<sp/>no<sp/>idea<sp/>what<sp/>the<sp/>first<sp/>byte<sp/>is.<sp/>In<sp/>all<sp/>examples</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>I&apos;ve<sp/>see<sp/>it&apos;s<sp/>always<sp/>`0x02`.<sp/>It<sp/>appears<sp/>that<sp/>the<sp/>Pokit<sp/>Android<sp/>app<sp/>only<sp/>ever<sp/>looks<sp/>at<sp/>`bytes[1]`.</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\pokitApi<sp/>Note,<sp/>we<sp/>can<sp/>actually<sp/>write<sp/>to<sp/>the<sp/>Button<sp/>Press<sp/>characteristic<sp/>too.<sp/>If<sp/>we<sp/>do,<sp/>then<sp/>whatever</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>set<sp/>as<sp/>the<sp/>first<sp/>byte<sp/>persists,<sp/>and<sp/>(unsurprisingly)<sp/>the<sp/>second<sp/>byte<sp/>reverts<sp/>to<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>button<sp/>state.<sp/>So<sp/>still<sp/>no<sp/>idea<sp/>what<sp/>that<sp/>first<sp/>byte<sp/>is<sp/>for.</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082eb" kindref="member">StatusService::ButtonStatus</ref><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082eb" kindref="member">StatusService::ButtonStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(1));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Button:<sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="713"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*<sp/>Handles<sp/>`QLowEnergyController::serviceDiscovered`<sp/>events.</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/>Here<sp/>we<sp/>override<sp/>the<sp/>base<sp/>implementation<sp/>to<sp/>detect<sp/>if<sp/>we&apos;re<sp/>looking<sp/>at<sp/>a<sp/>Pokit<sp/>Meter,<sp/>or<sp/>Pokit</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*<sp/>Pro<sp/>device,<sp/>as<sp/>the<sp/>two<sp/>devices<sp/>have<sp/>very<sp/>slightly<sp/>different<sp/>Status<sp/>Service<sp/>UUIDs.</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="classStatusServicePrivate_1a416f4b2a7e342c39fd667bcf324b4ea4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStatusServicePrivate_1a416f4b2a7e342c39fd667bcf324b4ea4" kindref="member">StatusServicePrivate::serviceDiscovered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbluetoothuuid" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QBluetoothUuid</ref><sp/>&amp;newService)</highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newService<sp/>==<sp/><ref refid="structStatusService_1_1ServiceUuids_1a8fa373d36e9332df30f38411ab3446de" kindref="member">StatusService::ServiceUuids::pokitMeter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>Status<sp/>Service<sp/>for<sp/>a<sp/>Pokit<sp/>Meter<sp/>device.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>=<sp/><ref refid="structStatusService_1_1ServiceUuids_1a8fa373d36e9332df30f38411ab3446de" kindref="member">StatusService::ServiceUuids::pokitMeter</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newService<sp/>==<sp/><ref refid="structStatusService_1_1ServiceUuids_1a0a9ca0f9377093ff60b282d4bfe3b0cf" kindref="member">StatusService::ServiceUuids::pokitPro</ref>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>Status<sp/>Service<sp/>for<sp/>a<sp/>Pokit<sp/>Pro<sp/>device.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>=<sp/><ref refid="structStatusService_1_1ServiceUuids_1a0a9ca0f9377093ff60b282d4bfe3b0cf" kindref="member">StatusService::ServiceUuids::pokitPro</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a654255854b4aca7718ef30e10260d89b" kindref="member">AbstractPokitServicePrivate::serviceDiscovered</ref>(newService);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="731"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/>Implements<sp/>AbstractPokitServicePrivate::characteristicRead<sp/>to<sp/>parse<sp/>\a<sp/>value,<sp/>then<sp/>emit<sp/>a</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*<sp/>specialised<sp/>signal,<sp/>for<sp/>each<sp/>supported<sp/>\a<sp/>characteristic.</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735" refid="classStatusServicePrivate_1a08d8faee04fb47ac19d3962609606d52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStatusServicePrivate_1a08d8faee04fb47ac19d3962609606d52" kindref="member">StatusServicePrivate::characteristicRead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>&amp;characteristic,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;value)</highlight></codeline>
<codeline lineno="737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1a84bef330c6ff124f1e460bb8949d82da" kindref="member">AbstractPokitServicePrivate::characteristicRead</ref>(characteristic,<sp/>value);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1ab883f16924c3c325a3400a5146d48ac0" kindref="member">StatusService::CharacteristicUuids::deviceCharacteristics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;deviceCharacteristicsRead(<ref refid="classStatusServicePrivate_1a7bdbc14dbfe0a29bb0333c01890a6ced" kindref="member">parseDeviceCharacteristics</ref>(value));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">StatusService::CharacteristicUuids::status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;deviceStatusRead(<ref refid="classStatusServicePrivate_1a3a6ff8ca3e9d7c884b269e52dd43aeb0" kindref="member">parseStatus</ref>(value));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1a3ca6f44f245a642f2a5e9147255a7bd8" kindref="member">StatusService::CharacteristicUuids::name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qstring" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString</ref><sp/>deviceName<sp/>=<sp/><ref refid="qstring_1fromUtf8-1" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QString::fromUtf8</ref>(value);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(R</highlight><highlight class="stringliteral">&quot;(Device<sp/>name:<sp/>&quot;%1&quot;)&quot;).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(deviceName);</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;deviceNameRead(deviceName);</highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1aeb51331d2510873d95a5993e62aa2cf0" kindref="member">StatusService::CharacteristicUuids::flashLed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Flash<sp/>LED<sp/>characteristic<sp/>is<sp/>write-only,<sp/>but<sp/>somehow<sp/>read&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">StatusService::CharacteristicUuids::torch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Torch&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>1,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1ab219dd54284c7299cce14b36ee59e08b" kindref="member">StatusService::TorchStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(0));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Torch<sp/>status:<sp/><sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;torchStatusRead(status);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1ae2abf1183b8b6f2cd2e0cb5206a3975f" kindref="member">StatusService::CharacteristicUuids::buttonPress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classAbstractPokitServicePrivate_1af8b480a950244540bfff7fc4b476a0ef" kindref="member">checkSize</ref>(<ref refid="qlatin1string" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QLatin1String</ref>(</highlight><highlight class="stringliteral">&quot;Torch&quot;</highlight><highlight class="normal">),<sp/>value,<sp/>2,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082eb" kindref="member">StatusService::ButtonStatus</ref><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classStatusService_1a14dc19e0faab66a66e89abebe41082eb" kindref="member">StatusService::ButtonStatus</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(1));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCDebug(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Button<sp/>status:<sp/><sp/>%1<sp/>(%2)&quot;</highlight><highlight class="normal">).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>((quint8)status).<ref refid="qstring_1arg-14" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">arg</ref>(<ref refid="classStatusService_1aac79e97cb114be25b2a6771d915f132d" kindref="member">StatusService::toString</ref>(status));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;buttonPressRead(value.<ref refid="qbytearray_1at" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">at</ref>(0),<sp/>status);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>characteristic<sp/>read<sp/>for<sp/>Status<sp/>service&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="788"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*<sp/>Implements<sp/>AbstractPokitServicePrivate::characteristicWritten<sp/>to<sp/>parse<sp/>\a<sp/>newValue,<sp/>then<sp/>emit<sp/>a</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/>specialised<sp/>signal,<sp/>for<sp/>each<sp/>supported<sp/>\a<sp/>characteristic.</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="classStatusServicePrivate_1a8de57b8b27437360d75bd44f74595db1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classStatusServicePrivate_1a8de57b8b27437360d75bd44f74595db1" kindref="member">StatusServicePrivate::characteristicWritten</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qlowenergycharacteristic" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">QLowEnergyCharacteristic</ref><sp/>&amp;characteristic,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qbytearray" kindref="compound" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">QByteArray</ref><sp/>&amp;newValue)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAbstractPokitServicePrivate_1aaf4a6cb9f0b1fe537877d615a6634201" kindref="member">AbstractPokitServicePrivate::characteristicWritten</ref>(characteristic,<sp/>newValue);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_Q(<ref refid="classStatusService" kindref="compound">StatusService</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1ab883f16924c3c325a3400a5146d48ac0" kindref="member">StatusService::CharacteristicUuids::deviceCharacteristics</ref>)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Device<sp/>Characteristics<sp/>is<sp/>read-only,<sp/>but<sp/>somehow<sp/>written&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1af27d015f60e86b0de464eab455c56f7c" kindref="member">StatusService::CharacteristicUuids::status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Status<sp/>characteristic<sp/>is<sp/>read-only,<sp/>but<sp/>somehow<sp/>written&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1a3ca6f44f245a642f2a5e9147255a7bd8" kindref="member">StatusService::CharacteristicUuids::name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;deviceNameWritten();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1aeb51331d2510873d95a5993e62aa2cf0" kindref="member">StatusService::CharacteristicUuids::flashLed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;deviceLedFlashed();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>()<sp/>==<sp/><ref refid="structStatusService_1_1CharacteristicUuids_1a8e558d76deeac993d962763fec80aa3d" kindref="member">StatusService::CharacteristicUuids::torch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qobject_1Q_EMIT" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">Q_EMIT</ref><sp/>q-&gt;torchStatusWritten();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>qCWarning(lc).noquote()<sp/>&lt;&lt;<sp/><ref refid="qobject_1tr" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtcore/qtcore.tags">tr</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>characteristic<sp/>written<sp/>for<sp/>Status<sp/>service&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classAbstractPokitServicePrivate_1a37538a1aa1beeb85a041f1735d65cbfd" kindref="member">serviceUuid</ref><sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1name" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">name</ref>()<sp/>&lt;&lt;<sp/>characteristic.<ref refid="qlowenergycharacteristic_1uuid" kindref="member" external="/home/paul/opt/qt/Docs/Qt-6.6.3/qtbluetooth/qtbluetooth.tags">uuid</ref>();</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment">///<sp/>\endcond</highlight></codeline>
    </programlisting>
    <location file="/home/paul/src/dokit/src/lib/statusservice.cpp"/>
  </compounddef>
</doxygen>
